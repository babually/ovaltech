/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServicesImport } from './routes/services'
import { Route as PortfolioImport } from './routes/portfolio'
import { Route as ContactsImport } from './routes/contacts'
import { Route as AboutusImport } from './routes/aboutus'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ServicesRoute = ServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioRoute = PortfolioImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => rootRoute,
} as any)

const ContactsRoute = ContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any)

const AboutusRoute = AboutusImport.update({
  id: '/aboutus',
  path: '/aboutus',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/aboutus': {
      id: '/aboutus'
      path: '/aboutus'
      fullPath: '/aboutus'
      preLoaderRoute: typeof AboutusImport
      parentRoute: typeof rootRoute
    }
    '/contacts': {
      id: '/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsImport
      parentRoute: typeof rootRoute
    }
    '/portfolio': {
      id: '/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioImport
      parentRoute: typeof rootRoute
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/aboutus': typeof AboutusRoute
  '/contacts': typeof ContactsRoute
  '/portfolio': typeof PortfolioRoute
  '/services': typeof ServicesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/aboutus': typeof AboutusRoute
  '/contacts': typeof ContactsRoute
  '/portfolio': typeof PortfolioRoute
  '/services': typeof ServicesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/aboutus': typeof AboutusRoute
  '/contacts': typeof ContactsRoute
  '/portfolio': typeof PortfolioRoute
  '/services': typeof ServicesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/aboutus' | '/contacts' | '/portfolio' | '/services'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/aboutus' | '/contacts' | '/portfolio' | '/services'
  id: '__root__' | '/' | '/aboutus' | '/contacts' | '/portfolio' | '/services'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutusRoute: typeof AboutusRoute
  ContactsRoute: typeof ContactsRoute
  PortfolioRoute: typeof PortfolioRoute
  ServicesRoute: typeof ServicesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutusRoute: AboutusRoute,
  ContactsRoute: ContactsRoute,
  PortfolioRoute: PortfolioRoute,
  ServicesRoute: ServicesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/aboutus",
        "/contacts",
        "/portfolio",
        "/services"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/aboutus": {
      "filePath": "aboutus.tsx"
    },
    "/contacts": {
      "filePath": "contacts.tsx"
    },
    "/portfolio": {
      "filePath": "portfolio.tsx"
    },
    "/services": {
      "filePath": "services.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
